# -*- mode: ruby -*-
# vi: set ft=ruby :
#ENV['VAGRANT_NO_PARALLEL'] = 'yes'

Vagrant.configure("2") do |config|

  # Kubernetes Master Server
  servers=[
        {
          :name => "kmaster1",
          :hostname => "chagest.kmaster1",
          :box => "centos/7",
          :ip => "192.168.56.19",
          :ssh_port => '2219'
        },
        {
          :name => "kmaster2",
          :hostname => "chagest.kmaster2",
          :box => "centos/7",
          :ip => "192.168.56.20",
          :ssh_port => '2200'
        }
  ]

  workers=[
        {
          :name => "kworker",
          :hostname => "chagest.kworker",
          :box => "centos/7",
          :ip => "192.168.56.2",
          :ssh_port => '220'
        }
  ]

  #config.vm.provision "shell", path: "bootstrap.sh"

  servers.each do |machine|
    config.vm.define machine[:hostname] do |km|
      km.vm.box = machine[:box]
      km.vm.hostname = machine[:hostname]
      km.vm.network "private_network", ip: machine[:ip] 
      km.vm.network "forwarded_port", guest: 22, host: machine[:ssh_port], id: "ssh"
      
      km.vm.provider "virtualbox" do |vb|
        vb.name = machine[:name]
        vb.gui = false
        vb.memory = 2048
        vb.cpus = 2
        # Prevent Virtualbox from interfering with host audio stack
        vb.customize ["modifyvm", :id, "--audio", "none"]
      end

      #km.vm.provision "shell", path: "bootstrap_master.sh"
      #km.vm.synced_folder "../data", "/home/vagrant/data"
      km.vm.provision "file", source: "./command.txt", destination: "/home/vagrant/command.txt"
      km.vm.provision "shell", run: "always",
        inline: <<-SHELL
          echo "Welcome to the "#{machine[:name]}
        SHELL
    end
  end

  # Number node
  nodeCount = 3

  # Kubernetes Worker Nodes
  (1..nodeCount).each do |i|
    workers.each do |node|
      getName = "#{node[:name]}"+"#{i}"
      getHostname = "#{node[:hostname]}"+"#{i}"
      getIp = "#{node[:ip]}"+"#{i}"
      getSsh_port = "#{node[:ssh_port]}"+"#{i}"

      config.vm.define getHostname do |kw|
        kw.vm.box = node[:box]
        kw.vm.hostname = getHostname
        kw.vm.network "private_network", ip: getIp
        kw.vm.network "forwarded_port", guest: 22, host: getSsh_port, id: "ssh"
        
        kw.vm.provider "virtualbox" do |vb|
          vb.name = getName
          vb.customize ["modifyvm", :id, "--memory", 1024]
          vb.customize ["modifyvm", :id, "--cpus", 1]
          # Prevent Virtualbox from interfering with host audio stack
          vb.customize ["modifyvm", :id, "--audio", "none"]
        end

        kw.vm.provision "shell", run: "always",
        inline: <<-SHELL
          echo "Welcome to the "#{getName}
        SHELL
        #config.vm.provider "shell", 
          #inline: <<-shell
            #curl -sSl https:/get.k3s.io ! sh
            #sudo cp -i "s/127\.0\.0\.1/192.168.178.60/" /vagrant/kubeconfig
          #shell
        #kw.vm.provision :shell do |shell|
          #shell.path = "bootstrap_worker.sh"
      end
    end
  end
end




# Vagrant.configure("2") do |config|
#   config.vm.box = "ubuntu/trusty64"
#   config.vm.network "private_network", auto_config: false
#   # manual ip
#   config.vm.provision "shell",
#     run: "always",
#     inline: "ifconfig eth1 192.168.178.60 netmask 255.255.255.0 up"
#   # manual ipv6
#   config.vm.provision "shell",
#     run: "always",
#     inline: "ifconfig eth1 inet6 add fc00::17/7"
#   config.vm.hostname = "chagest0"
#   python.vm.provider "virtualbox" do |vb|
#     vb.memory = 4096
#     vb.cpus = 2
#     end
#   config.vm.provider "shell", 
#     inline: <<-shell
#       curl -sSl https:/get.k3s.io ! sh
#       sudo cp -i "s/127\.0\.0\.1/192.168.178.60/" /vagrant/kubeconfig
#     shell
# end
